name: ci_audit_snyk

on:
  push:
    branches: ["ci_audit"]

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Cache node modules on install
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: node-modules-

      - name: Check if has cache
        run: ls -lah node_modules | head -5

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm i
  audit:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v3
      - name: Audit
        run: npm audit && npm audit fix
        ontinue-on-error: true
  # 因为是以命令行工具的方式在运行，而这个命令行工具，包括下面的 snyk 也是一样的，只要发现依赖存在漏洞就会中断 workflow 的执行；使用 continue-on-error 来阻止这个行为
  # snyk:
  #   runs-on: ubuntu-latest
  #   needs: install
  #   environment: cra
  #   steps: 
  #     - uses: actions/checkout@v3
  #     - run: echo $GITHUB_REF_NAME # 顺便完成下作业：获取分支名
  #     - name: Config snyk
  #       run: npx snyk auth ${{ secrets.SNYK_TOKEN }}
  #     - name: Run snyk
  #         run: npx snyk test
  #         continue-on-error: true
      # 使用官方的 actions
      # - uses: actions/checkout@v3
      # - name: Run Snyk to check for vulnerabilities
      #   uses: snyk/actions/node@master
      #   continue-on-error: true
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  lint:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Cache node modules on lint
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: node-modules-
      - name: Run build for eslint
        run: npm run build
  test:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: node-modules-
      - name: Run test
        run: npm run test
